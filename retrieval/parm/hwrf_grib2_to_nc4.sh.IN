##!/bin/bash
source ../input_vars.sh
source ../loadmodules.sh
  module purge
  module use $hpcstackpath
  module load $hpcstackversion
  module load $modcomp
  module load $modnetcdf
  module load $modcdo
  module load $modnco
  module load $modwgrib2
  module load $modhpss

  module list

#cd $FORCING_PATH

STARTDATE="HFRC_BEG"
ENDDATE="HFRC_END"
start=$(date -d $STARTDATE +%s)
end=$(date -d $ENDDATE +%s)
FORCING_MODEL='FORCING_T'
FORCING_NC='NETCDF_SWITCH'
NC_COMP='NETCDF_COMP'
#-----------------------------------------------------------------------------------#
#                                         ATM (hourly)                              #
#-----------------------------------------------------------------------------------#

  echo ' '
  echo '       *****************************************************************'
  echo "      ***                  HWRF Forcing Prep (nc4)                      ***"
  echo '       *****************************************************************'
  echo ' '

#-----------------------------------------------------------------------------------#
if [ $FORCING_NC = 'YES' ]
then

   d="$start"
   echo "start date: $(date -d @$start '+%Y-%m-%d %2H')"
   echo "end date: $(date -d @$end '+%Y-%m-%d %2H')"

#-----------------------------------------------------------------------------------#
   echo "converting grib2 to netcdf ..."
#-----------------------------------------------------------------------------------#
   while [[ $d -le $end ]]
   do
      date -d @$d '+%Y-%m-%d %2H'
      YY=$(date -d @$d '+%Y')
      MM=$(date -d @$d '+%m')
      DD=$(date -d @$d '+%d')
      HH=$(date -d @$d '+%2H')
#-----------------------------------------------------------------------------------#
# convert core_grib2 to netcdf
     unset file_list
     for i in `seq 0 1 9`; do
        if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2.nc ];then
            file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2"
        else
            echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2.nc exists"
        fi
        if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2.nc ];then
           file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2"
        else
           echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2.nc exists"
        fi
        if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2.nc ];then
           file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2"
        else
           echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2.nc exists"
        fi
     done
#-----------------------------------------------------------------------------------#
       if [ ! -z "$file_list" ]; then
         for file in $file_list
         do
           if [ -f tmp.$file ];then
             rm -f tmp.$file
           fi
         wgrib2 $file -match "PRMSL:mean sea level:|UGRD:10 m above ground:|VGRD:10 m above ground:|PRES:surface:|TMP:2 m above ground:|DLWRF:surface:|DSWRF:surface:|SPFH:2 m above ground:|PRATE:surface:" -set_grib_type c2 -new_grid_winds grid -new_grid_vectors "UGRD:VGRD" -new_grid_interpolation bilinear -new_grid latlon LON_MIN:NLON:DLON LAT_MIN:NLAT:DLAT tmp.$file
         wgrib2 tmp.$file -netcdf $file.nc -nc4
             if [ $NC_COMP = 'YES' ]
             then
                if [ -f tmp1.$file.nc ];then
                  rm -f tmp1.$file.nc
                fi
                if [ -f tmp2.$file.nc ];then
                  rm -f tmp2.$file.nc
                fi
                ncks -4 -L 1 $file.nc tmp1.$file.nc
                ncks --ppc default=.DP tmp1.$file.nc tmp2.$file.nc
                mv tmp2.$file.nc $file.nc
             fi
         echo "$file.nc"
         done
       fi
#-----------------------------------------------------------------------------------#

    d=$(( $d + 21600 ))
    done

    echo '       *****************************************************************'
    echo "HWRF (netcdf) files are generated"
    echo ' '
    echo '       *****************************************************************'
    echo "     ***                            done                               ***"
    echo '       *****************************************************************'
    echo ' '
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
fi
