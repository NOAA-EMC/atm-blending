##!/bin/bash
source ../input_vars.sh
source ../loadmodules.sh
  module purge
  module use $hpcstackpath
  module load $hpcstackversion
  module load $modcomp
  module load $modnetcdf
  module load $modcdo
  module load $modnco
  module load $modwgrib2
  module load $modhpss

  module list

#cd $FORCING_PATH

STARTDATE="HFRC_BEG"
ENDDATE="HFRC_END"
start=$(date -d $STARTDATE +%s)
end=$(date -d $ENDDATE +%s)
FORCING_MODEL='FORCING_T'
FORCING_NC='NETCDF_SWITCH'
#-----------------------------------------------------------------------------------#
#                                         ATM (hourly)                              #
#-----------------------------------------------------------------------------------#

  echo ' '
  echo '       *****************************************************************'
  echo "      ***                     HWRF Forcing Prep                        ***"
  echo '       *****************************************************************'
  echo ' '

#-----------------------------------------------------------------------------------#

d="$start"
echo "start date: $(date -d @$start '+%Y-%m-%d %2H')"
echo "end date: $(date -d @$end '+%Y-%m-%d %2H')"

#-----------------------------------------------------------------------------------#
# retrieve from gfs atmos
if [ $FORCING_MODEL = 'HWRF' ]
then
echo "retrieving HWRF ..."

#-----------------------------------------------------------------------------------#
    while [[ $d -le $end ]]
    do
       date -d @$d '+%Y-%m-%d %2H'
       YY=$(date -d @$d '+%Y')
       MM=$(date -d @$d '+%m')
       DD=$(date -d @$d '+%d')
       HH=$(date -d @$d '+%2H')
#-----------------------------------------------------------------------------------#
       FILEATM=(${HWRFsource}/${event}.${YY}${MM}${DD}${HH}.tar)

       SOURCE1=${event}.${YY}${MM}${DD}${HH}.hwrfprs.core.0p015.f0
       SOURCE2=${event}.${YY}${MM}${DD}${HH}.hwrfprs.storm.0p015.f0
       SOURCE3=${event}.${YY}${MM}${DD}${HH}.hwrfprs.synoptic.0p125.f0
#-----------------------------------------------------------------------------------#
       unset file_list
       unset file_hpss_list
           for i in `seq 0 1 9`; do
              if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2 ];then 
                file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2"
                file_hpss_list="$file_hpss_list ${SOURCE1}$(printf %02d $i).grb2"
              else
                echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2 exists"
              fi
              if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2 ];then
                file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2"
                file_hpss_list="$file_hpss_list ${SOURCE2}$(printf %02d $i).grb2"
              else
                echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2 exists"
              fi
              if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2 ];then
                file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2"
                file_hpss_list="$file_hpss_list ${SOURCE3}$(printf %02d $i).grb2"
              else
                echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2 exists"
              fi
           done
#-----------------------------------------------------------------------------------#
       if [ ! -z $file_list ]; then
          htar -xvf $FILEATM ${SOURCE1}00.grb2 ${SOURCE1}01.grb2 ${SOURCE1}02.grb2 ${SOURCE1}03.grb2 ${SOURCE1}04.grb2 ${SOURCE1}05.grb2 ${SOURCE1}06.grb2 ${SOURCE1}07.grb2 ${SOURCE1}08.grb2 ${SOURCE1}09.grb2 ${SOURCE2}00.grb2 ${SOURCE2}01.grb2 ${SOURCE2}02.grb2 ${SOURCE2}03.grb2 ${SOURCE2}04.grb2 ${SOURCE2}05.grb2 ${SOURCE2}06.grb2 ${SOURCE2}07.grb2 ${SOURCE2}08.grb2 ${SOURCE2}09.grb2 ${SOURCE3}00.grb2 ${SOURCE3}01.grb2 ${SOURCE3}02.grb2 ${SOURCE3}03.grb2 ${SOURCE3}04.grb2 ${SOURCE3}05.grb2 ${SOURCE3}06.grb2 ${SOURCE3}07.grb2 ${SOURCE3}08.grb2 ${SOURCE3}09.grb2
#-----------------------------------------------------------------------------------#
         for i in `seq 0 1 9`; do
            mv ${SOURCE1}$(printf %02d $i).grb2 hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2
            mv ${SOURCE2}$(printf %02d $i).grb2 hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2
            mv ${SOURCE3}$(printf %02d $i).grb2 hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2
         done
       fi
#-----------------------------------------------------------------------------------#
    d=$(( $d + 21600 ))
    done
    echo '       *****************************************************************'
    echo "HWRF (grib2) files are retrieved"
    echo ' '
    echo '       *****************************************************************'
    echo "     ***                            done                               ***"
    echo '       *****************************************************************'
    echo ' '
fi
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
if [ $FORCING_NC = 'YES' ]
then

   d="$start"
   echo "start date: $(date -d @$start '+%Y-%m-%d %2H')"
   echo "end date: $(date -d @$end '+%Y-%m-%d %2H')"

#-----------------------------------------------------------------------------------#
   echo "converting grib2 to netcdf ..."
#-----------------------------------------------------------------------------------#
#define 9 fields
   npp=9
   varname[1]='PRMSL'
   varname[2]='UGRD'
   varname[3]='VGRD'
   varname[4]='PRES'
   varname[5]='TMP'
   varname[6]='DLWRF'
   varname[7]='DSWRF'
   varname[8]='SPFH'
   varname[9]='PRATE'
   lev[1]=':mean sea level:'
   lev[2]=':10 m above ground:'
   lev[3]=':10 m above ground:'
   lev[4]=':surface:'
   lev[5]=':2 m above ground:'
   lev[6]=':surface:'
   lev[7]=':surface:'
   lev[8]=':2 m above ground:'
   lev[9]=':surface:'
#-----------------------------------------------------------------------------------#
   while [[ $d -le $end ]]
   do
      date -d @$d '+%Y-%m-%d %2H'
      YY=$(date -d @$d '+%Y')
      MM=$(date -d @$d '+%m')
      DD=$(date -d @$d '+%d')
      HH=$(date -d @$d '+%2H')
#-----------------------------------------------------------------------------------#
# convert core_grib2 to netcdf
     unset file_list
     for i in `seq 0 1 9`; do
        if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2.nc ];then
            file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2"
        else
            echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).core.grib2.nc exists"
        fi
        if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2.nc ];then
           file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2"
        else
           echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).storm.grib2.nc exists"
        fi
        if [ ! -f hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2.nc ];then
           file_list="$file_list hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2"
        else
           echo "hwrf.${YY}${MM}${DD}_$(printf %02d $HH).f$(printf %02d $i).synoptic.grib2.nc exists"
        fi
     done
#-----------------------------------------------------------------------------------#
    if [ ! -z $file_list ]; then
       for file in $file_list
       do
       count=0
          while (( count < $npp ))
             do
             (( count = count + 1 ))
             wgrib2 $file -s | grep "${varname[count]}${lev[count]}" | wgrib2 -i $file -netcdf $file.${varname[count]}.nc -nc4
             echo $count
             ncks -A $file.${varname[count]}.nc $file.nc
             rm  $file.${varname[count]}.nc
          done

      echo $file
      done
    fi
#-----------------------------------------------------------------------------------#

    d=$(( $d + 21600 ))
    done

    echo '       *****************************************************************'
    echo "HWRF (netcdf) files are generated"
    echo ' '
    echo '       *****************************************************************'
    echo "     ***                            done                               ***"
    echo '       *****************************************************************'
    echo ' '
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
fi
